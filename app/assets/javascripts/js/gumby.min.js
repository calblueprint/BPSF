!function($){function Gumby(){this.$dom=$(document);this.$html=this.$dom.find("html");this.isOldie=!!this.$html.hasClass("oldie");this.click="click";this.onReady=this.onOldie=this.onTouch=false;this.autoInit=$("script[gumby-init]").attr("gumby-init")==="false"?false:true;this.debugMode=Boolean($("script[gumby-debug]").length);this.touchDevice=!!(Modernizr.touch||window.navigator.userAgent.indexOf("Windows Phone")>0);this.gumbyTouch=false;this.touchEvents="js/libs";this.breakpoint=Number($("script[gumby-breakpoint]").attr("gumby-breakpoint"))||768;this.touchEventsLoaded=false;this.uiModulesReady=false;this.uiModules={};this.inits={};var touch=$("script[gumby-touch]").attr("gumby-touch"),path=$("script[gumby-path]").attr("gumby-path");if(touch==="false"){this.touchEvents=false;}else{if(touch){this.touchEvents=touch;}else{if(path){this.touchEvents=path;}}}if(this.touchDevice){this.click+=" tap";}if(this.touchDevice&&$(window).width()<this.breakpoint){this.$html.addClass("gumby-touch");this.gumbyTouch=true;}else{this.$html.addClass("gumby-no-touch");}if(this.debugMode){this.debug("Gumby is in debug mode");}}Gumby.prototype.init=function(options){var scope=this,opts=options?options:{};this.$dom.ready(function(){if(opts.debug){scope.debugMode=true;}scope.debug("Initializing Gumby");var mods=opts.uiModules?opts.uiModules:false;scope.initUIModules(mods);if(scope.touchEventsLoaded||!scope.touchDevice){scope.helpers();}else{scope.uiModulesReady=true;}});return this;};Gumby.prototype.helpers=function(){if(this.onReady){this.onReady();}if(this.isOldie&&this.onOldie){this.onOldie();}if(Modernizr.touch&&this.onTouch){this.onTouch();}};Gumby.prototype.ready=function(code){if(code&&typeof code==="function"){this.onReady=code;}return this;};Gumby.prototype.oldie=function(code){if(code&&typeof code==="function"){this.onOldie=code;}return this;};Gumby.prototype.touch=function(code){if(code&&typeof code==="function"){this.onTouch=code;}return this;};Gumby.prototype.console=function(type,data){if(!this.debugMode||!window.console){return;}console[console[type]?type:"log"](data.length>1?Array.prototype.slice.call(data):data[0]);};Gumby.prototype.log=function(){this.console("log",arguments);};Gumby.prototype.debug=function(){this.console("debug",arguments);};Gumby.prototype.warn=function(){this.console("warn",arguments);};Gumby.prototype.error=function(){this.console("error",arguments);};Gumby.prototype.dump=function(){return{$dom:this.$dom,isOldie:this.isOldie,touchEvents:this.touchEvents,debugMode:this.debugMode,autoInit:this.autoInit,uiModules:this.uiModules,click:this.click};};Gumby.prototype.selectAttr=function(){var i=0;for(;i<arguments.length;i++){var attr=arguments[i],dataAttr="data-"+arguments[i],gumbyAttr="gumby-"+arguments[i];if(this.is("["+dataAttr+"]")){return this.attr(dataAttr)?this.attr(dataAttr):true;}else{if(this.is("["+gumbyAttr+"]")){return this.attr(gumbyAttr)?this.attr(gumbyAttr):true;}else{if(this.is("["+attr+"]")){return this.attr(attr)?this.attr(attr):true;}}}}return false;};Gumby.prototype.addInitalisation=function(ref,code){this.inits[ref]=code;};Gumby.prototype.initialize=function(ref,all){if(typeof ref==="object"){var i=0;for(i;i<ref.length;i++){if(!this.inits[ref[i]]||typeof this.inits[ref[i]]!=="function"){this.error("Error initializing module: "+ref[i]);continue;}this.inits[ref[i]](all);}}else{if(this.inits[ref]&&typeof this.inits[ref]==="function"){this.inits[ref](all);}else{this.error("Error initializing module: "+ref);}}return this;};Gumby.prototype.UIModule=function(data){var module=data.module;this.uiModules[module]=data;};Gumby.prototype.initUIModules=function(mods){var x,m,arr=this.uiModules;if(mods){arr=mods;}for(x in arr){m=mods?arr[x]:x;this.uiModules[m].init();}};window.Gumby=new Gumby();}(jQuery);!function($){function Checkbox($el){Gumby.debug("Initializing Checkbox",$el);this.$el=$el;this.$input=this.$el.find("input[type=checkbox]");var scope=this;this.$el.on(Gumby.click,function(e){e.preventDefault();if(scope.$input.is("[disabled]")){return;}if(scope.$el.hasClass("checked")){scope.update(false);}else{scope.update(true);}}).on("gumby.check",function(){Gumby.debug("Check event triggered",scope.$el);scope.update(true);}).on("gumby.uncheck",function(){Gumby.debug("Uncheck event triggered",scope.$el);scope.update(false);});if(this.$input.prop("checked")||this.$el.hasClass("checked")){scope.update(true);}}Checkbox.prototype.update=function(check){var $span=this.$el.find("span");if(check){Gumby.debug("Checking Checkbox",this.$el);$span.append('<i class="icon-check" />');this.$input.prop("checked",true);Gumby.debug("Triggering onCheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange");}else{Gumby.debug("Unchecking Checkbox",this.$el);this.$input.prop("checked",false);$span.find("i").remove();Gumby.debug("Triggering onUncheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange");}};Gumby.addInitalisation("checkbox",function(){$(".checkbox").each(function(){var $this=$(this);if($this.data("isCheckbox")){return true;}$this.data("isCheckbox",true);new Checkbox($this);});});Gumby.UIModule({module:"checkbox",events:["onCheck","onUncheck","onChange","check","uncheck"],init:function(){Gumby.initialize("checkbox");}});}(jQuery);!function($){function Fixed($el){Gumby.debug("Initializing Fixed Position",$el);this.$el=$el;this.fixedPoint="";this.pinPoint=false;this.offset=0;this.pinOffset=0;this.top=0;this.constrainEl=true;this.state=false;this.measurements={left:0,width:0};this.setup();var scope=this;$(window).on("scroll load",function(){scope.monitorScroll();});this.$el.on("gumby.initialize",function(){Gumby.debug("Re-initializing Fixed Position",$el);scope.setup();scope.monitorScroll();});}Fixed.prototype.setup=function(){var scope=this;this.fixedPoint=this.parseAttrValue(Gumby.selectAttr.apply(this.$el,["fixed"]));this.pinPoint=Gumby.selectAttr.apply(this.$el,["pin"])||false;this.offset=Number(Gumby.selectAttr.apply(this.$el,["offset"]))||0;this.pinOffset=Number(Gumby.selectAttr.apply(this.$el,["pinoffset"]))||0;this.top=Number(Gumby.selectAttr.apply(this.$el,["top"]))||0;this.constrainEl=Gumby.selectAttr.apply(this.$el,["constrain"])||true;if(this.constrainEl==="false"){this.constrainEl=false;}this.$parent=this.$el.parents(".columns, .column, .row");this.$parent=this.$parent.length?this.$parent.first():false;this.parentRow=this.$parent?!!this.$parent.hasClass("row"):false;if(this.pinPoint){this.pinPoint=this.parseAttrValue(this.pinPoint);}if(this.$parent&&this.constrainEl){this.measure();$(window).resize(function(){if(scope.state){scope.measure();scope.constrain();}});}};Fixed.prototype.monitorScroll=function(){var scrollAmount=$(window).scrollTop(),fixedPoint=this.fixedPoint instanceof jQuery?this.fixedPoint.offset().top:this.fixedPoint,pinPoint=false;if(this.pinPoint){pinPoint=this.pinPoint instanceof jQuery?this.pinPoint.offset().top:this.pinPoint;}if(this.offset){fixedPoint-=this.offset;}if(this.pinOffset){pinPoint-=this.pinOffset;}if((scrollAmount>=fixedPoint)&&this.state!=="fixed"){if(!pinPoint||scrollAmount<pinPoint){this.fix();}}else{if(scrollAmount<fixedPoint&&this.state==="fixed"){this.unfix();}else{if(pinPoint&&scrollAmount>=pinPoint&&this.state!=="pinned"){this.pin();}}}};Fixed.prototype.fix=function(){Gumby.debug("Element has been fixed",this.$el);Gumby.debug("Triggering onFixed event",this.$el);this.state="fixed";this.$el.css({top:0+this.top}).addClass("fixed").removeClass("unfixed pinned").trigger("gumby.onFixed");if(this.$parent){this.constrain();}};Fixed.prototype.unfix=function(){Gumby.debug("Element has been unfixed",this.$el);Gumby.debug("Triggering onUnfixed event",this.$el);this.state="unfixed";this.$el.addClass("unfixed").removeClass("fixed pinned").trigger("gumby.onUnfixed");};Fixed.prototype.pin=function(){Gumby.debug("Element has been pinned",this.$el);Gumby.debug("Triggering onPinned event",this.$el);this.state="pinned";this.$el.css({top:this.$el.offset().top}).addClass("pinned fixed").removeClass("unfixed").trigger("gumby.onPinned");};Fixed.prototype.constrain=function(){Gumby.debug("Constraining element",this.$el);this.$el.css({left:this.measurements.left,width:this.measurements.width});};Fixed.prototype.measure=function(){var offsets=this.$parent.offset(),parentPadding;this.measurements.left=offsets.left;this.measurements.width=this.$parent.width();if(this.parentRow){parentPadding=Number(this.$parent.css("paddingLeft").replace(/px/,""));if(parentPadding){this.measurements.left+=parentPadding;}}};Fixed.prototype.parseAttrValue=function(attr){if($.isNumeric(attr)){return Number(attr);}else{if(attr==="top"){return this.$el.offset().top;}else{var $el=$(attr);if(!$el.length){Gumby.error("Cannot find Fixed target: "+attr);return false;}return $el;}}};Gumby.addInitalisation("fixed",function(all){$("[data-fixed],[gumby-fixed],[fixed]").each(function(){var $this=$(this);if($this.data("isFixed")&&!all){return true;}else{if($this.data("isFixed")&&all){$this.trigger("gumby.initialize");return true;}}$this.data("isFixed",true);new Fixed($this);});});Gumby.UIModule({module:"fixed",events:["initialize","onFixed","onUnfixed"],init:function(){Gumby.initialize("fixed");}});}(jQuery);!function($){if(!Gumby.gumbyTouch){return;}function Navbar($el){Gumby.debug("Initializing Navbar",$el);this.$el=$el;this.$dropDowns=this.$el.find("li:has(.dropdown)");var scope=this;this.$dropDowns.on(Gumby.click,this.toggleDropdown).on("swiperight",this.openLink);if(this.$dropDowns.children("a").attr("href")!=="#"){this.$dropDowns.children("a").append('<i class="icon-popup"></i>').children("i").on(Gumby.click,this.openLink);}this.$dropDowns.find(".dropdown li:not(:has(.dropdown)) a[href]").on(Gumby.click,this.openLink);$(window).on("mousemove touchstart",function(e){e.stopImmediatePropagation();if(e.type==="mousemove"){scope.$dropDowns.on("mouseover mouseout",scope.toggleDropdown);}});}Navbar.prototype.toggleDropdown=function(e){e.preventDefault();var $this=$(this);if($this.hasClass("active")){$this.removeClass("active");}else{$this.addClass("active");}};Navbar.prototype.openLink=function(e){e.preventDefault();var $this=$(this),$el=$this,href;if($this.is("i")){$el=$this.parent("a");}else{if($this.is("li")){$el=$this.children("a");}}href=$el.attr("href");if($el.attr("target")=="blank"){window.open(href);}else{window.location=href;}};Gumby.addInitalisation("navbar",function(){$(".navbar").each(function(){var $this=$(this);if($this.data("isNavbar")){return true;}$this.data("isNavbar",true);new Navbar($this);});});Gumby.UIModule({module:"navbar",events:[],init:function(){Gumby.initialize("navbar");}});}(jQuery);!function($){function RadioBtn($el){Gumby.debug("Initializing Radio Button",$el);this.$el=$el;this.$input=this.$el.find("input[type=radio]");var scope=this;this.$el.on(Gumby.click,function(e){e.preventDefault();if(scope.$input.is("[disabled]")){return;}scope.update();}).on("gumby.check",function(){Gumby.debug("Check event triggered",scope.$el);scope.update();});if(this.$input.prop("checked")||this.$el.hasClass("checked")){scope.update(true);}}RadioBtn.prototype.update=function(){if(this.$el.hasClass("checked")&&this.$input.prop("checked")&&this.$el.find("i.icon-dot").length){return;}Gumby.debug("Updating Radio Button group",this.$el);var $span=this.$el.find("span"),group='input[name="'+this.$input.attr("name")+'"]';$(".radio").has(group).removeClass("checked").find("input").prop("checked",false).end().find("i").remove();this.$input.prop("checked",true);$span.append('<i class="icon-dot" />');Gumby.debug("Triggering onCheck event",this.$el);this.$el.addClass("checked").trigger("gumby.onCheck");};Gumby.addInitalisation("radiobtn",function(){$(".radio").each(function(){var $this=$(this);if($this.data("isRadioBtn")){return true;}$this.data("isRadioBtn",true);new RadioBtn($this);});});Gumby.UIModule({module:"radiobtn",events:["onCheck","check"],init:function(){Gumby.initialize("radiobtn");}});}(jQuery);!function($){function Retina($el){Gumby.debug("Initializing Retina",$el);this.$el=$el;this.imageSrc=this.$el.attr("src");this.retinaSrc=this.fetchRetinaImage();this.$retinaImg=$(new Image());var scope=this;if(!this.retinaSrc){return false;}this.$retinaImg.attr("src",this.retinaSrc).load(function(){scope.retinaImageLoaded();}).error(function(){Gumby.error("Couln't load retina image: "+scope.retinaSrc);});}Retina.prototype.fetchRetinaImage=function(){var imgSrc=this.imageSrc,index=this.imageSrc.search(/(\.|\/)(gif|jpe?g|png)$/i);if(index<0){return false;}return imgSrc.substr(0,index)+"@2x"+imgSrc.substr(index,imgSrc.length);};Retina.prototype.retinaImageLoaded=function(){Gumby.debug("Swapping image for retina version",this.$el);Gumby.debug("Triggering onRetina event",this.$el);this.$el.attr("src",this.$retinaImg.attr("src")).trigger("gumby.onRetina");};Gumby.addInitalisation("retina",function(){if(!window.devicePixelRatio||window.devicePixelRatio<=1){return;}$("img[data-retina],img[gumby-retina],img[retina]").each(function(){var $this=$(this);if($this.data("isRetina")){return true;}$this.data("isRetina",true);new Retina($this);});});Gumby.UIModule({module:"retina",events:["onRetina"],init:function(){Gumby.initialize("retina");}});}(jQuery);!function($){function SkipLink($el){Gumby.debug("Initializing Skiplink",$el);this.$el=$el;this.targetPos=0;this.duration=0;this.offset=false;this.easing="";this.update=false;this.setup();var scope=this;this.$el.on(Gumby.click+" gumby.skip",function(e){e.preventDefault();if(e.namespace==="skip"){Gumby.debug("Skip event triggered",scope.$el);}if(scope.update){scope.calculateTarget(scope.skipTo);}else{scope.skipTo();}}).on("gumby.initialize",function(){Gumby.debug("Re-initializing Skiplink",scope.$el);scope.setup();});}SkipLink.prototype.setup=function(){this.duration=Number(Gumby.selectAttr.apply(this.$el,["duration"]))||200;this.offset=Gumby.selectAttr.apply(this.$el,["offset"])||false;this.easing=Gumby.selectAttr.apply(this.$el,["easing"])||"swing";this.update=Gumby.selectAttr.apply(this.$el,["update"])?true:false;this.calculateTarget();};SkipLink.prototype.calculateTarget=function(cb){var scope=this,target=Gumby.selectAttr.apply(this.$el,["goto"]),$target;if(target=="top"){this.targetPos=0;}else{if($.isNumeric(target)){this.targetPos=Number(target);}else{$target=$(target);if(!$target.length){Gumby.error("Cannot find skiplink target: "+target);return false;}this.targetPos=$target.offset().top;}}if(cb){cb.apply(this);}};SkipLink.prototype.skipTo=function(){Gumby.debug("Skipping to target",this.$el);var scope=this;$("html,body").animate({scrollTop:this.calculateOffset()},this.duration,this.easing).promise().done(function(){Gumby.debug("Triggering onComplete event",scope.$el);scope.$el.trigger("gumby.onComplete");});};SkipLink.prototype.calculateOffset=function(){if(!this.offset){return this.targetPos;}var op=this.offset.substr(0,1),off=Number(this.offset.substr(1,this.offset.length));if(op==="-"){return this.targetPos-off;}else{if(op==="+"){return this.targetPos+off;}}};Gumby.addInitalisation("skiplink",function(all){$(".skiplink > a, .skip").each(function(){var $this=$(this);if($this.data("isSkipLink")&&!all){return true;}else{if($this.data("isSkipLink")&&all){$this.trigger("gumby.initialize");return true;}}$this.data("isSkipLink",true);new SkipLink($this);});});Gumby.UIModule({module:"skiplink",events:["initialize","onComplete","skip"],init:function(){Gumby.initialize("skiplink");}});}(jQuery);!function($){function Tabs($el){Gumby.debug("Initializing Tabs",$el);this.$el=$el;this.$nav=this.$el.find("ul.tab-nav > li");this.$content=this.$el.find(".tab-content");var scope=this;this.$nav.children("a").on(Gumby.click,function(e){e.preventDefault();scope.click($(this));});this.$el.on("gumby.set",function(e,index){Gumby.debug("Set event triggered",scope.$el);scope.set(e,index);});}Tabs.prototype.click=function($this){var index=$this.parent().index();if(this.$nav.eq(index).add(this.$content.eq(index)).hasClass("active")){return;}Gumby.debug("Setting active tab to "+index,this.$el);this.$nav.add(this.$content).removeClass("active");this.$nav.eq(index).add(this.$content.eq(index)).addClass("active");Gumby.debug("Triggering onChange event",this.$el);this.$el.trigger("gumby.onChange",index);};Tabs.prototype.set=function(e,index){this.$nav.eq(index).find("a").trigger(Gumby.click);};Gumby.addInitalisation("tabs",function(){$(".tabs").each(function(){var $this=$(this);if($this.data("isTabs")){return true;}$this.data("isTabs",true);new Tabs($this);});});Gumby.UIModule({module:"tabs",events:["onChange","set"],init:function(){Gumby.initialize("tabs");}});}(jQuery);!function($){function Toggle($el){this.$el=$($el);this.targets=[];this.on="";this.className="";this.self=false;if(this.$el.length){Gumby.debug("Initializing Toggle",$el);this.init();}}function Switch($el){this.$el=$($el);this.targets=[];this.on="";this.className="";this.self=false;if(this.$el.length){Gumby.debug("Initializing Switch",$el);this.init();}}Toggle.prototype.init=function(){var scope=this;this.setup();this.$el.on(this.on,function(e){e.stopImmediatePropagation();e.preventDefault();scope.trigger(scope.triggered);}).on("gumby.trigger",function(){Gumby.debug("Trigger event triggered",scope.$el);scope.trigger(scope.triggered);}).on("gumby.initialize",function(){Gumby.debug("Re-initializing "+scope.constructor,$el);scope.setup();});};Toggle.prototype.setup=function(){this.targets=this.parseTargets();this.on=Gumby.selectAttr.apply(this.$el,["on"])||Gumby.click;this.className=Gumby.selectAttr.apply(this.$el,["classname"])||"active";this.self=Gumby.selectAttr.apply(this.$el,["self"])==="false";};Toggle.prototype.parseTargets=function(){var targetStr=Gumby.selectAttr.apply(this.$el,["trigger"]),secondaryTargets=0,targets=[];if(!targetStr){return false;}secondaryTargets=targetStr.indexOf("|");if(secondaryTargets===-1){if(!this.checkTargets([targetStr])){return false;}return[$(targetStr)];}targets=targetStr.split("|");if(!this.checkTargets(targets)){return false;}return targets.length>1?[$(targets[0]),$(targets[1])]:[$(targets[0])];};Toggle.prototype.checkTargets=function(targets){var i=0;for(i;i<targets.length;i++){if(targets[i]&&!$(targets[i]).length){Gumby.error("Cannot find "+this.constructor.name+" target: "+targets[i]);return false;}}return true;};Toggle.prototype.triggered=function(){Gumby.debug("Triggering onTrigger event",this.$el);this.$el.trigger("gumby.onTrigger",[this.$el.hasClass(this.className)]);};Switch.prototype=new Toggle();Switch.prototype.constructor=Switch;Toggle.prototype.trigger=function(cb){Gumby.debug("Triggering Toggle",this.$el);var $target;if(!this.targets){this.$el.toggleClass(this.className);}else{if(this.targets.length==1){this.$el.add(this.targets[0]).toggleClass(this.className);}else{if(this.targets.length>1){if(this.targets[0].hasClass(this.className)){$target=this.targets[0];if(!this.self){$target=$target.add(this.$el);}$target.removeClass(this.className);this.targets[1].addClass(this.className);}else{$target=this.targets[0];if(!this.self){$target=$target.add(this.$el);}$target.addClass(this.className);this.targets[1].removeClass(this.className);}}}}if(cb&&typeof cb==="function"){cb.apply(this);}};Switch.prototype.trigger=function(cb){Gumby.debug("Triggering Switch",this.$el);var $target;if(!this.targets){this.$el.addClass(this.className);}else{if(this.targets.length==1){$target=this.targets[0];if(!this.self){$target=$target.add(this.$el);}$target.addClass(this.className);}else{if(this.targets.length>1){$target=this.targets[0];if(!this.self){$target=$target.add(this.$el);}$target.addClass(this.className);this.targets[1].removeClass(this.className);}}}if(cb&&typeof cb==="function"){cb.apply(this);}};Gumby.addInitalisation("toggles",function(all){$(".toggle").each(function(){var $this=$(this);if($this.data("isToggle")&&!all){return true;}else{if($this.data("isToggle")&&all){$this.trigger("gumby.initialize");}}$this.data("isToggle",true);new Toggle($this);});});Gumby.addInitalisation("switches",function(all){$(".switch").each(function(){var $this=$(this);if($this.data("isSwitch")&&!all){return true;}else{if($this.data("isSwitch")&&all){$this.trigger("gumby.initialize");return true;}}$this.data("isSwitch",true);new Switch($this);});});Gumby.UIModule({module:"toggleswitch",events:["initialize","trigger","onTrigger"],init:function(){Gumby.initialize("switches");Gumby.initialize("toggles");}});}(jQuery);!function($){function Validation($this,req){if(Gumby){Gumby.debug("Initializing Validation",$this);}this.$this=$this;this.$field=this.$this.parents(".field");this.req=req||function(){return !!this.$this.val().length;};var scope=this;if(this.$this.is("[type=checkbox], [type=radio]")){this.$field=this.$this.parent("label");this.$field.on("gumby.onChange",function(){scope.validate();});}else{if(this.$this.is("select")){this.$field=this.$this.parents(".picker");this.$field.on("change",function(){scope.validate();});}else{this.$this.on("blur",function(e){if(e.which!==9){scope.validate();}});}}}Validation.prototype.validate=function(){var result=this.req(this.$this);if(!result){this.$field.removeClass("success").addClass("danger");}else{this.$field.removeClass("danger").addClass("success");}return result;};$.fn.validation=function(options){var settings=$.extend({submit:false,fail:false,required:[]},options),validations=[];return this.each(function(){if(!settings.required.length){return false;}var $this=$(this),reqLength=settings.required.length,i;for(i=0;i<reqLength;i++){validations.push(new Validation($this.find('[name="'+settings.required[i].name+'"]'),settings.required[i].validate||false));}$this.on("submit",function(e){var failed=false;if(!$this.data("passed")){e.preventDefault();var reqLength=validations.length,i;for(i=0;i<reqLength;i++){if(!validations[i].validate()){failed=true;}}if(!failed){if(settings.submit&&typeof settings.submit==="function"){settings.submit($this.serializeArray());return;}$this.data("passed",true).submit();}else{if(settings.fail&&typeof settings.fail==="function"){settings.fail();return;}}}});});};}(jQuery);!function($){if((!Gumby.touchDevice||!Gumby.touchEvents)&&Gumby.autoInit){window.Gumby.init();}else{if(Gumby.touchEvents&&Gumby.touchDevice){Gumby.debug("Loading jQuery mobile touch events");yepnope.errorTimeout=2000;Modernizr.load({test:Modernizr.touch,yep:Gumby.touchEvents+"/jquery.mobile.custom.min.js",callback:function(url,result,key){if(!$.mobile){Gumby.error("Error loading jQuery mobile touch events");}Gumby.touchEventsLoaded=true;if(Gumby.autoInit){window.Gumby.init();}else{if(Gumby.uiModulesReady){Gumby.helpers();}}}});}}if(typeof define=="function"&&define.amd){define(window.Gumby);}}(jQuery);