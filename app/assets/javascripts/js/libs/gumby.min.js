!function(a){function b(c){Gumby.debug("Initializing Checkbox",c);this.$el=c;this.$input=this.$el.find("input[type=checkbox]");var d=this;this.$el.on(Gumby.click,function(f){f.preventDefault();if(d.$input.is("[disabled]")){return}if(d.$el.hasClass("checked")){d.update(false)}else{d.update(true)}}).on("gumby.check",function(){Gumby.debug("Check event triggered",d.$el);d.update(true)}).on("gumby.uncheck",function(){Gumby.debug("Uncheck event triggered",d.$el);d.update(false)});if(this.$input.prop("checked")||this.$el.hasClass("checked")){d.update(true)}}b.prototype.update=function(d){var c=this.$el.find("span");if(d){Gumby.debug("Checking Checkbox",this.$el);c.append('<i class="icon-check" />');this.$input.prop("checked",true);Gumby.debug("Triggering onCheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange")}else{Gumby.debug("Unchecking Checkbox",this.$el);this.$input.prop("checked",false);c.find("i").remove();Gumby.debug("Triggering onUncheck event",this.$el);Gumby.debug("Triggering onChange event",this.$el);this.$el.removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange")}};Gumby.addInitalisation("checkbox",function(){a(".checkbox").each(function(){var c=a(this);if(c.data("isCheckbox")){return true}c.data("isCheckbox",true);new b(c)})});Gumby.UIModule({module:"checkbox",events:["onCheck","onUncheck","onChange","check","uncheck"],init:function(){Gumby.initialize("checkbox")}})}(jQuery);!function(b){function a(c){Gumby.debug("Initializing Fixed Position",c);this.$el=c;this.fixedPoint="";this.pinPoint=false;this.offset=0;this.pinOffset=0;this.top=0;this.constrainEl=true;this.state=false;this.measurements={left:0,width:0};this.setup();var d=this;b(window).on("scroll load",function(){d.monitorScroll()});this.$el.on("gumby.initialize",function(){Gumby.debug("Re-initializing Fixed Position",c);d.setup();d.monitorScroll()})}a.prototype.setup=function(){var c=this;this.fixedPoint=this.parseAttrValue(Gumby.selectAttr.apply(this.$el,["fixed"]));this.pinPoint=Gumby.selectAttr.apply(this.$el,["pin"])||false;this.offset=Number(Gumby.selectAttr.apply(this.$el,["offset"]))||0;this.pinOffset=Number(Gumby.selectAttr.apply(this.$el,["pinoffset"]))||0;this.top=Number(Gumby.selectAttr.apply(this.$el,["top"]))||0;this.constrainEl=Gumby.selectAttr.apply(this.$el,["constrain"])||true;if(this.constrainEl==="false"){this.constrainEl=false}this.$parent=this.$el.parents(".columns, .column, .row");this.$parent=this.$parent.length?this.$parent.first():false;this.parentRow=this.$parent?!!this.$parent.hasClass("row"):false;if(this.pinPoint){this.pinPoint=this.parseAttrValue(this.pinPoint)}if(this.$parent&&this.constrainEl){this.measure();b(window).resize(function(){if(c.state){c.measure();c.constrain()}})}};a.prototype.monitorScroll=function(){var e=b(window).scrollTop(),c=this.fixedPoint instanceof jQuery?this.fixedPoint.offset().top:this.fixedPoint,d=false;if(this.pinPoint){d=this.pinPoint instanceof jQuery?this.pinPoint.offset().top:this.pinPoint}if(this.offset){c-=this.offset}if(this.pinOffset){d-=this.pinOffset}if((e>=c)&&this.state!=="fixed"){if(!d||e<d){this.fix()}}else{if(e<c&&this.state==="fixed"){this.unfix()}else{if(d&&e>=d&&this.state!=="pinned"){this.pin()}}}};a.prototype.fix=function(){Gumby.debug("Element has been fixed",this.$el);Gumby.debug("Triggering onFixed event",this.$el);this.state="fixed";this.$el.css({top:0+this.top}).addClass("fixed").removeClass("unfixed pinned").trigger("gumby.onFixed");if(this.$parent){this.constrain()}};a.prototype.unfix=function(){Gumby.debug("Element has been unfixed",this.$el);Gumby.debug("Triggering onUnfixed event",this.$el);this.state="unfixed";this.$el.addClass("unfixed").removeClass("fixed pinned").trigger("gumby.onUnfixed")};a.prototype.pin=function(){Gumby.debug("Element has been pinned",this.$el);Gumby.debug("Triggering onPinned event",this.$el);this.state="pinned";this.$el.css({top:this.$el.offset().top}).addClass("pinned fixed").removeClass("unfixed").trigger("gumby.onPinned")};a.prototype.constrain=function(){Gumby.debug("Constraining element",this.$el);this.$el.css({left:this.measurements.left,width:this.measurements.width})};a.prototype.measure=function(){var d=this.$parent.offset(),c;this.measurements.left=d.left;this.measurements.width=this.$parent.width();if(this.parentRow){c=Number(this.$parent.css("paddingLeft").replace(/px/,""));if(c){this.measurements.left+=c}}};a.prototype.parseAttrValue=function(c){if(b.isNumeric(c)){return Number(c)}else{if(c==="top"){return this.$el.offset().top}else{var d=b(c);if(!d.length){Gumby.error("Cannot find Fixed target: "+c);return false}return d}}};Gumby.addInitalisation("fixed",function(c){b("[data-fixed],[gumby-fixed],[fixed]").each(function(){var d=b(this);if(d.data("isFixed")&&!c){return true}else{if(d.data("isFixed")&&c){d.trigger("gumby.initialize");return true}}d.data("isFixed",true);new a(d)})});Gumby.UIModule({module:"fixed",events:["initialize","onFixed","onUnfixed"],init:function(){Gumby.initialize("fixed")}})}(jQuery);!function(b){if(!Gumby.gumbyTouch){return}function a(c){Gumby.debug("Initializing Navbar",c);this.$el=c;this.$dropDowns=this.$el.find("li:has(.dropdown)");var d=this;this.$dropDowns.on(Gumby.click,this.toggleDropdown).on("swiperight",this.openLink);if(this.$dropDowns.children("a").attr("href")!=="#"){this.$dropDowns.children("a").append('<i class="icon-popup"></i>').children("i").on(Gumby.click,this.openLink)}this.$dropDowns.find(".dropdown li:not(:has(.dropdown)) a[href]").on(Gumby.click,this.openLink);b(window).on("mousemove touchstart",function(f){f.stopImmediatePropagation();if(f.type==="mousemove"){d.$dropDowns.on("mouseover mouseout",d.toggleDropdown)}})}a.prototype.toggleDropdown=function(d){d.preventDefault();var c=b(this);if(c.hasClass("active")){c.removeClass("active")}else{c.addClass("active")}};a.prototype.openLink=function(g){g.preventDefault();var f=b(this),d=f,c;if(f.is("i")){d=f.parent("a")}else{if(f.is("li")){d=f.children("a")}}c=d.attr("href");if(d.attr("target")=="blank"){window.open(c)}else{window.location=c}};Gumby.addInitalisation("navbar",function(){b(".navbar").each(function(){var c=b(this);if(c.data("isNavbar")){return true}c.data("isNavbar",true);new a(c)})});Gumby.UIModule({module:"navbar",events:[],init:function(){Gumby.initialize("navbar")}})}(jQuery);!function(b){function a(c){Gumby.debug("Initializing Radio Button",c);this.$el=c;this.$input=this.$el.find("input[type=radio]");var d=this;this.$el.on(Gumby.click,function(f){f.preventDefault();if(d.$input.is("[disabled]")){return}d.update()}).on("gumby.check",function(){Gumby.debug("Check event triggered",d.$el);d.update()});if(this.$input.prop("checked")||this.$el.hasClass("checked")){d.update(true)}}a.prototype.update=function(){if(this.$el.hasClass("checked")&&this.$input.prop("checked")&&this.$el.find("i.icon-dot").length){return}Gumby.debug("Updating Radio Button group",this.$el);var c=this.$el.find("span"),d='input[name="'+this.$input.attr("name")+'"]';b(".radio").has(d).removeClass("checked").find("input").prop("checked",false).end().find("i").remove();this.$input.prop("checked",true);c.append('<i class="icon-dot" />');Gumby.debug("Triggering onCheck event",this.$el);this.$el.addClass("checked").trigger("gumby.onCheck")};Gumby.addInitalisation("radiobtn",function(){b(".radio").each(function(){var c=b(this);if(c.data("isRadioBtn")){return true}c.data("isRadioBtn",true);new a(c)})});Gumby.UIModule({module:"radiobtn",events:["onCheck","check"],init:function(){Gumby.initialize("radiobtn")}})}(jQuery);!function(b){function a(c){Gumby.debug("Initializing Retina",c);this.$el=c;this.imageSrc=this.$el.attr("src");this.retinaSrc=this.fetchRetinaImage();this.$retinaImg=b(new Image());var d=this;if(!this.retinaSrc){return false}this.$retinaImg.attr("src",this.retinaSrc).load(function(){d.retinaImageLoaded()}).error(function(){Gumby.error("Couln't load retina image: "+d.retinaSrc)})}a.prototype.fetchRetinaImage=function(){var d=this.imageSrc,c=this.imageSrc.search(/(\.|\/)(gif|jpe?g|png)$/i);if(c<0){return false}return d.substr(0,c)+"@2x"+d.substr(c,d.length)};a.prototype.retinaImageLoaded=function(){Gumby.debug("Swapping image for retina version",this.$el);Gumby.debug("Triggering onRetina event",this.$el);this.$el.attr("src",this.$retinaImg.attr("src")).trigger("gumby.onRetina")};Gumby.addInitalisation("retina",function(){if(!window.devicePixelRatio||window.devicePixelRatio<=1){return}b("img[data-retina],img[gumby-retina],img[retina]").each(function(){var c=b(this);if(c.data("isRetina")){return true}c.data("isRetina",true);new a(c)})});Gumby.UIModule({module:"retina",events:["onRetina"],init:function(){Gumby.initialize("retina")}})}(jQuery);!function(a){function b(c){Gumby.debug("Initializing Skiplink",c);this.$el=c;this.targetPos=0;this.duration=0;this.offset=false;this.easing="";this.update=false;this.setup();var d=this;this.$el.on(Gumby.click+" gumby.skip",function(f){f.preventDefault();if(f.namespace==="skip"){Gumby.debug("Skip event triggered",d.$el)}if(d.update){d.calculateTarget(d.skipTo)}else{d.skipTo()}}).on("gumby.initialize",function(){Gumby.debug("Re-initializing Skiplink",d.$el);d.setup()})}b.prototype.setup=function(){this.duration=Number(Gumby.selectAttr.apply(this.$el,["duration"]))||200;this.offset=Gumby.selectAttr.apply(this.$el,["offset"])||false;this.easing=Gumby.selectAttr.apply(this.$el,["easing"])||"swing";this.update=Gumby.selectAttr.apply(this.$el,["update"])?true:false;this.calculateTarget()};b.prototype.calculateTarget=function(d){var e=this,f=Gumby.selectAttr.apply(this.$el,["goto"]),c;if(f=="top"){this.targetPos=0}else{if(a.isNumeric(f)){this.targetPos=Number(f)}else{c=a(f);if(!c.length){Gumby.error("Cannot find skiplink target: "+f);return false}this.targetPos=c.offset().top}}if(d){d.apply(this)}};b.prototype.skipTo=function(){Gumby.debug("Skipping to target",this.$el);var c=this;a("html,body").animate({scrollTop:this.calculateOffset()},this.duration,this.easing).promise().done(function(){Gumby.debug("Triggering onComplete event",c.$el);c.$el.trigger("gumby.onComplete")})};b.prototype.calculateOffset=function(){if(!this.offset){return this.targetPos}var d=this.offset.substr(0,1),c=Number(this.offset.substr(1,this.offset.length));if(d==="-"){return this.targetPos-c}else{if(d==="+"){return this.targetPos+c}}};Gumby.addInitalisation("skiplink",function(c){a(".skiplink > a, .skip").each(function(){var d=a(this);if(d.data("isSkipLink")&&!c){return true}else{if(d.data("isSkipLink")&&c){d.trigger("gumby.initialize");return true}}d.data("isSkipLink",true);new b(d)})});Gumby.UIModule({module:"skiplink",events:["initialize","onComplete","skip"],init:function(){Gumby.initialize("skiplink")}})}(jQuery);!function(b){function a(c){Gumby.debug("Initializing Tabs",c);this.$el=c;this.$nav=this.$el.find("ul.tab-nav > li");this.$content=this.$el.find(".tab-content");var d=this;this.$nav.children("a").on(Gumby.click,function(f){f.preventDefault();d.click(b(this))});this.$el.on("gumby.set",function(g,f){Gumby.debug("Set event triggered",d.$el);d.set(g,f)})}a.prototype.click=function(d){var c=d.parent().index();if(this.$nav.eq(c).add(this.$content.eq(c)).hasClass("active")){return}Gumby.debug("Setting active tab to "+c,this.$el);this.$nav.add(this.$content).removeClass("active");this.$nav.eq(c).add(this.$content.eq(c)).addClass("active");Gumby.debug("Triggering onChange event",this.$el);this.$el.trigger("gumby.onChange",c)};a.prototype.set=function(d,c){this.$nav.eq(c).find("a").trigger(Gumby.click)};Gumby.addInitalisation("tabs",function(){b(".tabs").each(function(){var c=b(this);if(c.data("isTabs")){return true}c.data("isTabs",true);new a(c)})});Gumby.UIModule({module:"tabs",events:["onChange","set"],init:function(){Gumby.initialize("tabs")}})}(jQuery);!function(b){function c(d){this.$el=b(d);this.targets=[];this.on="";this.className="";this.self=false;if(this.$el.length){Gumby.debug("Initializing Toggle",d);this.init()}}function a(d){this.$el=b(d);this.targets=[];this.on="";this.className="";this.self=false;if(this.$el.length){Gumby.debug("Initializing Switch",d);this.init()}}c.prototype.init=function(){var d=this;this.setup();this.$el.on(this.on,function(f){f.stopImmediatePropagation();f.preventDefault();d.trigger(d.triggered)}).on("gumby.trigger",function(){Gumby.debug("Trigger event triggered",d.$el);d.trigger(d.triggered)}).on("gumby.initialize",function(){Gumby.debug("Re-initializing "+d.constructor,$el);d.setup()})};c.prototype.setup=function(){this.targets=this.parseTargets();this.on=Gumby.selectAttr.apply(this.$el,["on"])||Gumby.click;this.className=Gumby.selectAttr.apply(this.$el,["classname"])||"active";this.self=Gumby.selectAttr.apply(this.$el,["self"])==="false"};c.prototype.parseTargets=function(){var f=Gumby.selectAttr.apply(this.$el,["trigger"]),e=0,d=[];if(!f){return false}e=f.indexOf("|");if(e===-1){if(!this.checkTargets([f])){return false}return[b(f)]}d=f.split("|");if(!this.checkTargets(d)){return false}return d.length>1?[b(d[0]),b(d[1])]:[b(d[0])]};c.prototype.checkTargets=function(d){var e=0;for(e;e<d.length;e++){if(d[e]&&!b(d[e]).length){Gumby.error("Cannot find "+this.constructor.name+" target: "+d[e]);return false}}return true};c.prototype.triggered=function(){Gumby.debug("Triggering onTrigger event",this.$el);this.$el.trigger("gumby.onTrigger",[this.$el.hasClass(this.className)])};a.prototype=new c();a.prototype.constructor=a;c.prototype.trigger=function(e){Gumby.debug("Triggering Toggle",this.$el);var d;if(!this.targets){this.$el.toggleClass(this.className)}else{if(this.targets.length==1){this.$el.add(this.targets[0]).toggleClass(this.className)}else{if(this.targets.length>1){if(this.targets[0].hasClass(this.className)){d=this.targets[0];if(!this.self){d=d.add(this.$el)}d.removeClass(this.className);this.targets[1].addClass(this.className)}else{d=this.targets[0];if(!this.self){d=d.add(this.$el)}d.addClass(this.className);this.targets[1].removeClass(this.className)}}}}if(e&&typeof e==="function"){e.apply(this)}};a.prototype.trigger=function(e){Gumby.debug("Triggering Switch",this.$el);var d;if(!this.targets){this.$el.addClass(this.className)}else{if(this.targets.length==1){d=this.targets[0];if(!this.self){d=d.add(this.$el)}d.addClass(this.className)}else{if(this.targets.length>1){d=this.targets[0];if(!this.self){d=d.add(this.$el)}d.addClass(this.className);this.targets[1].removeClass(this.className)}}}if(e&&typeof e==="function"){e.apply(this)}};Gumby.addInitalisation("toggles",function(d){b(".toggle").each(function(){var e=b(this);if(e.data("isToggle")&&!d){return true}else{if(e.data("isToggle")&&d){e.trigger("gumby.initialize")}}e.data("isToggle",true);new c(e)})});Gumby.addInitalisation("switches",function(d){b(".switch").each(function(){var e=b(this);if(e.data("isSwitch")&&!d){return true}else{if(e.data("isSwitch")&&d){e.trigger("gumby.initialize");return true}}e.data("isSwitch",true);new a(e)})});Gumby.UIModule({module:"toggleswitch",events:["initialize","trigger","onTrigger"],init:function(){Gumby.initialize("switches");Gumby.initialize("toggles")}})}(jQuery);!function(a){function b(e,d){if(Gumby){Gumby.debug("Initializing Validation",e)}this.$this=e;this.$field=this.$this.parents(".field");this.req=d||function(){return !!this.$this.val().length};var c=this;if(this.$this.is("[type=checkbox], [type=radio]")){this.$field=this.$this.parent("label");this.$field.on("gumby.onChange",function(){c.validate()})}else{if(this.$this.is("select")){this.$field=this.$this.parents(".picker");this.$field.on("change",function(){c.validate()})}else{this.$this.on("blur",function(f){if(f.which!==9){c.validate()}})}}}b.prototype.validate=function(){var c=this.req(this.$this);if(!c){this.$field.removeClass("success").addClass("danger")}else{this.$field.removeClass("danger").addClass("success")}return c};a.fn.validation=function(c){var e=a.extend({submit:false,fail:false,required:[]},c),d=[];return this.each(function(){if(!e.required.length){return false}var g=a(this),h=e.required.length,f;for(f=0;f<h;f++){d.push(new b(g.find('[name="'+e.required[f].name+'"]'),e.required[f].validate||false))}g.on("submit",function(l){var j=false;if(!g.data("passed")){l.preventDefault();var m=d.length,k;for(k=0;k<m;k++){if(!d[k].validate()){j=true}}if(!j){if(e.submit&&typeof e.submit==="function"){e.submit(g.serializeArray());return}g.data("passed",true).submit()}else{if(e.fail&&typeof e.fail==="function"){e.fail();return}}}})})}}(jQuery);